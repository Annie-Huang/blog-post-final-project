:root {
  --ff-sans: 'IBM Plex Sans', sans-serif;
  --ff-serif: 'IBM Plex Serif', serif;

  /* small screen font-sizes */
  --fs-200: 0.75rem;
  --fs-300: 1rem;
  --fs-400: 1.25rem;
  --fs-500: 1.375rem;
  --fs-600: 1.75rem;
  --fs-900: 2.125rem;

  --fw-200: 200;
  --fw-300: 300;
  --fw-400: 400;
  --fw-700: 700;

  --clr-neutral-100: #fff;
  --clr-neutral-200: #eef1f6;
  --clr-neutral-300: #a9afbc;
  --clr-neutral-400: #737b8c;
  --clr-neutral-500: #434956;
  --clr-neutral-900: #020203;

  --clr-primary-300: #f3f7ff;
  --clr-primary-400: #8ea8da;

  --br: 1rem;
}

@media (min-width: 40em) {
  :root {
    --fs-500: 1.75rem;
    --fs-600: 2.125rem;
    --fs-900: 4.25rem;
  }
}

/* ///////////////
  Reset
  ////////////// */

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4 {
  line-height: 1;
}

/* Kevin's solution: adding body, dl, dd, figure in as well. But we don't use h4 and figure in this project */
body,
h1,
h2,
h3,
p,
dl,
dd,
figure {
  margin: 0;
}

ul[class],
ol[class] {
  list-style: none;
  padding: 0;
}

input,
button,
textarea,
select {
  font: inherit;
}

img {
  max-width: 100%;
  height: auto;
  display: block;

  border-radius: var(--br);
}

body {
  line-height: 1.3;
  /* Kevin's solution (he choose it because of Single Blog Post page.) I choose --ff-serif because most of the text is here is in --ff-serif */
  font-family: var(--ff-sans);
  font-size: var(--fs-400); /* Kevin solution: choose a main font-size */
  /*color: var(--clr-neutral-900);*/
  font-weight: 300;
  padding: 1.5rem;
}

/* ///////////////
  Typography
  ////////////// */

h1,
h2,
h3,
.section-subtitle,
.text-serif {
  font-family: var(--ff-serif);
  /* Added by Kevin, Because all headings are --fw-200 */
  font-weight: var(--fw-200);
}

a {
  font-weight: var(--fw-700);
  font-size: var(--fs-300);
  color: var(--clr-neutral-900);
}
a:hover,
a:focus {
  color: var(--clr-primary-400);
}

.text-500 {
  font-size: var(--fs-500);
}

.page-title {
  font-size: var(--fs-900);
}

.page-intro {
  font-size: var(--fs-600);
}

.section-title {
  font-size: var(--fs-600);
  /* Kevin choose to use .section-title where as me style on h2, all .section-title is in <h2>, but guess Kevin's approach makes better sense */
  color: var(--clr-neutral-400);
}

.section-subtitle {
  font-size: var(--fs-600);
}

.btn {
  display: inline-block;
  cursor: pointer;
  border: 0;
  background: none;

  font-weight: var(--fw-700);
  font-size: var(--fs-300);
  /* force button to be certain font-family */
  font-family: var(--ff-sans);
  text-decoration: none;
  color: var(--clr-neutral-900);
}
.btn::after {
  /* https://www.toptal.com/designers/htmlarrows/ Use this then you don't need to absolute position things */
  content: '\203A';
  margin-left: 1em;
  font-weight: var(--fw-300);
}

.btn:hover,
.btn:focus {
  color: var(--clr-primary-400);
}

/* ///////////////
  General Layout
  ////////////// */

section {
  padding: 2.5rem 0;
}

@media (min-width: 40em) {
  section {
    padding: 3.5rem 0;
  }
}

.container {
  max-width: 50rem;
  margin: 0 auto;
  padding: 0 1rem;
}

.flow-content > * + * {
  /* Kevin's solution. Better to it to em rather than rem, so it can be related to the current font size */
  margin-top: var(--flow-spacer, 1em);
}

.split {
  display: flex;
  flex-direction: column;
  /*gap: var(--flow-spacer, 2.5rem);*/
  gap: 4rem;
}

.split > * {
  flex-basis: 100%;
}

@media (min-width: 40em) {
  .split {
    flex-direction: row;
    gap: 2.5rem;
  }
}

.xl-space {
  margin-top: 5rem;
}

/* ///////////////
  Utility classes
  ////////////// */

.bg-primary-300 {
  background-color: var(--clr-primary-300);
  border-radius: var(--br);
}
/* ///////////////
  Individual sections
  ////////////// */

.primary-header {
  border-radius: var(--br);
  padding: 2rem;
  /*background: url('img/hero.jpg') center / cover;*/
  background-color: var(--clr-primary-400);
  background-size: cover;
  min-height: 50vh;

  display: flex;
  flex-direction: column;
}

.primary-header .container {
  width: 100%;
  margin-top: auto;
  margin-bottom: auto;
}

.primary-header .container > * {
  max-width: 12ch;
}

.page-home .primary-header {
  background-image: url(img/hero.jpg);
  background-position: center center;
}
.page-blog .primary-header {
  background-image: url(img/blog.jpg);
  background-position: left center;
  /* The above is the same as
  background-position: center left;
  */
}

.primary-nav {
  position: fixed;
  bottom: 0.5em;
  left: 0.5em;
  right: 0.5em;
  border-radius: var(--br);
  background: var(--clr-neutral-900);
  font-family: var(--ff-serif);
}

.primary-nav ul {
  display: flex;
  justify-content: space-around;
  margin: 0;
  padding: 0.8em 0;
}

.primary-nav li {
  line-height: 0;
}

.primary-nav a {
  color: var(--clr-neutral-200);
  text-decoration: none;
}

@media (min-width: 40em) {
  .primary-nav {
    position: static;
    background: transparent;
  }
  .primary-nav a {
    color: inherit;
    text-decoration: none;
  }
  .primary-header__inner {
    display: flex;
    justify-content: space-between;
  }
  .primary-nav ul {
    padding: 0;
    gap: 2em;
  }
}

.secondary-navigation {
  display: flex;
  align-items: center;
  margin: 2rem 0;
}

.secondary-navigation > a:last-child {
  margin-left: auto;
}

.categories {
  margin: 0;
  display: flex;
  gap: 2rem;
}

.categories button {
  cursor: pointer;
  font-size: var(--fs-200);
  text-transform: uppercase;
  background: transparent;
  border: 0;
}

.article-preview h3 {
  font-size: var(--fs-500);
}

.article-preview img {
  object-fit: cover; /* making it cover is just like background-size: cover for background image */
  /*object-position: center center;    <<<< center center is the default value. it is equavalent to background-position for background image */

  height: 12.5rem;
  width: 100%; /* To stretch the width in mobile view */
}

.article-preview .info {
  display: flex;
  font-weight: var(--fw-400);
  font-size: var(--fs-200);
  color: var(--clr-neutral-400);

  gap: 2em;
}

/* use .call-to-action form rather than .newsletter.split because call-to-action may have many forms and we want each form looks the same */
.call-to-action form {
  margin-top: 3rem;
  display: flex; /* do not use .split as it's not evenly divided */
  flex-direction: column;
  gap: 3rem;
  --flow-spacer: 0.5rem;
}

/* It means we want the div within the form to grow when there is space (flex-grow: 1) and we want it to grow at the same rate no matter how big the field (flex-basis: 100%) */
.call-to-action form > div {
  flex-basis: 100%; /* auto is the default value. flex-basis: 0  meaning it doesn't have a starting value */
  flex-shrink: 1;
  flex-grow: 1; /* 1 is the default value */
}

.call-to-action input {
  width: 100%;
  border: 0;
  border-bottom: 2px solid var(--clr-neutral-300);
}
.call-to-action input:focus {
  border-color: var(--clr-primary-400);
  border-width: 4px;
}

.call-to-action input::placeholder {
  color: var(--clr-neutral-300);
  /* by default the browser usually place the placeholder to a smaller opacity */
  opacity: 1;
}

.call-to-action label {
  display: block;
  margin-bottom: 0.5em;
  font-size: var(--fs-300);
  font-weight: var(--fw-400);
}

.call-to-action button {
  align-self: flex-start;
}

@media (min-width: 40em) {
  .call-to-action form {
    flex-direction: row;
    margin-top: 2.5rem;
  }
  .call-to-action button {
    align-self: center;
  }
}

.primary-footer__inner {
  --border: 2px solid var(--clr-neutral-200);
  border-top: var(--border);
  border-bottom: var(--border);
  padding: 3em 0;
  margin: 2em 0;
}

footer {
  padding-bottom: 1em;
}
.footer-nav {
  display: flex;
}

.footer-nav > *:first-child {
  margin-right: 4em;
}

.footer-social {
  display: flex;
  gap: 2em;
}

.footer-social a {
  font-weight: var(--fw-200);
}

/* ///////////////
  home page styles
  ////////////// */
.intro {
  /* Use em rather than rem. Because the font of the 2nd <p> is changing from mobile to desktop, the spacing between 1st <p> and 2nd <p> is bigger
   Where as the "Connect" word doesn't change font size, so the space between "Connect" to 2nd <p> stays the same
 */
  --flow-spacer: 2em;
}

/* ///////////////
  blog page styles
  ////////////// */

.article-grid {
  display: grid;
  gap: 3em 2em;
  grid-template-columns: repeat(6, 1fr);
}

.article-grid > * {
  grid-column: 1 / -1;
}

@media (min-width: 30em) {
  .article-grid > *:not(:first-child) {
    grid-column: span 3;
  }
}

@media (min-width: 40em) {
  .article-grid > *:first-child {
    grid-column: 1 / -1;
  }

  .article-grid > .article-preview:first-child {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1em;
  }
  .article-grid > .article-preview:first-child img {
    grid-row: span 3;
    height: 17.5rem;
  }

  .article-grid > *:nth-child(2),
  .article-grid > *:nth-child(3) {
    grid-column: span 3;
  }
  .article-grid > *:nth-child(4),
  .article-grid > *:nth-child(5),
  .article-grid > *:nth-child(6) {
    grid-column: span 2;
  }
  .article-grid > *:nth-child(7),
  .article-grid > *:nth-child(8) {
    grid-column: span 3;
  }
}
